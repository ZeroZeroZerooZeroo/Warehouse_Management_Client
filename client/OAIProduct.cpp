/**
 * Warehouse Management API
 * API for managing all operations available in the application
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProduct.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProduct::OAIProduct(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProduct::OAIProduct() {
    this->initializeModel();
}

OAIProduct::~OAIProduct() {}

void OAIProduct::initializeModel() {

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_unit_isSet = false;
    m_unit_isValid = false;

    m_barcode_isSet = false;
    m_barcode_isValid = false;

    m_min_stock_level_isSet = false;
    m_min_stock_level_isValid = false;

    m_max_stock_level_isSet = false;
    m_max_stock_level_isValid = false;

    m_delivery_time_isSet = false;
    m_delivery_time_isValid = false;

    m_purchase_price_isSet = false;
    m_purchase_price_isValid = false;

    m_selling_price_isSet = false;
    m_selling_price_isValid = false;

    m_is_active_isSet = false;
    m_is_active_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;

    m_category_id_isSet = false;
    m_category_id_isValid = false;
}

void OAIProduct::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProduct::fromJsonObject(QJsonObject json) {

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("product_id")]);
    m_product_id_isSet = !json[QString("product_id")].isNull() && m_product_id_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_unit_isValid = ::OpenAPI::fromJsonValue(m_unit, json[QString("unit")]);
    m_unit_isSet = !json[QString("unit")].isNull() && m_unit_isValid;

    m_barcode_isValid = ::OpenAPI::fromJsonValue(m_barcode, json[QString("barcode")]);
    m_barcode_isSet = !json[QString("barcode")].isNull() && m_barcode_isValid;

    m_min_stock_level_isValid = ::OpenAPI::fromJsonValue(m_min_stock_level, json[QString("min_stock_level")]);
    m_min_stock_level_isSet = !json[QString("min_stock_level")].isNull() && m_min_stock_level_isValid;

    m_max_stock_level_isValid = ::OpenAPI::fromJsonValue(m_max_stock_level, json[QString("max_stock_level")]);
    m_max_stock_level_isSet = !json[QString("max_stock_level")].isNull() && m_max_stock_level_isValid;

    m_delivery_time_isValid = ::OpenAPI::fromJsonValue(m_delivery_time, json[QString("delivery_time")]);
    m_delivery_time_isSet = !json[QString("delivery_time")].isNull() && m_delivery_time_isValid;

    m_purchase_price_isValid = ::OpenAPI::fromJsonValue(m_purchase_price, json[QString("purchase_price")]);
    m_purchase_price_isSet = !json[QString("purchase_price")].isNull() && m_purchase_price_isValid;

    m_selling_price_isValid = ::OpenAPI::fromJsonValue(m_selling_price, json[QString("selling_price")]);
    m_selling_price_isSet = !json[QString("selling_price")].isNull() && m_selling_price_isValid;

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("is_active")]);
    m_is_active_isSet = !json[QString("is_active")].isNull() && m_is_active_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;

    m_category_id_isValid = ::OpenAPI::fromJsonValue(m_category_id, json[QString("category_id")]);
    m_category_id_isSet = !json[QString("category_id")].isNull() && m_category_id_isValid;
}

QString OAIProduct::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProduct::asJsonObject() const {
    QJsonObject obj;
    if (m_product_id_isSet) {
        obj.insert(QString("product_id"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_sku_isSet) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_unit_isSet) {
        obj.insert(QString("unit"), ::OpenAPI::toJsonValue(m_unit));
    }
    if (m_barcode_isSet) {
        obj.insert(QString("barcode"), ::OpenAPI::toJsonValue(m_barcode));
    }
    if (m_min_stock_level_isSet) {
        obj.insert(QString("min_stock_level"), ::OpenAPI::toJsonValue(m_min_stock_level));
    }
    if (m_max_stock_level_isSet) {
        obj.insert(QString("max_stock_level"), ::OpenAPI::toJsonValue(m_max_stock_level));
    }
    if (m_delivery_time_isSet) {
        obj.insert(QString("delivery_time"), ::OpenAPI::toJsonValue(m_delivery_time));
    }
    if (m_purchase_price_isSet) {
        obj.insert(QString("purchase_price"), ::OpenAPI::toJsonValue(m_purchase_price));
    }
    if (m_selling_price_isSet) {
        obj.insert(QString("selling_price"), ::OpenAPI::toJsonValue(m_selling_price));
    }
    if (m_is_active_isSet) {
        obj.insert(QString("is_active"), ::OpenAPI::toJsonValue(m_is_active));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    if (m_category_id_isSet) {
        obj.insert(QString("category_id"), ::OpenAPI::toJsonValue(m_category_id));
    }
    return obj;
}

qint64 OAIProduct::getProductId() const {
    return m_product_id;
}
void OAIProduct::setProductId(const qint64 &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIProduct::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIProduct::is_product_id_Valid() const{
    return m_product_id_isValid;
}

QString OAIProduct::getSku() const {
    return m_sku;
}
void OAIProduct::setSku(const QString &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIProduct::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIProduct::is_sku_Valid() const{
    return m_sku_isValid;
}

QString OAIProduct::getName() const {
    return m_name;
}
void OAIProduct::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProduct::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProduct::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIProduct::getDescription() const {
    return m_description;
}
void OAIProduct::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIProduct::is_description_Set() const{
    return m_description_isSet;
}

bool OAIProduct::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIProduct::getUnit() const {
    return m_unit;
}
void OAIProduct::setUnit(const QString &unit) {
    m_unit = unit;
    m_unit_isSet = true;
}

bool OAIProduct::is_unit_Set() const{
    return m_unit_isSet;
}

bool OAIProduct::is_unit_Valid() const{
    return m_unit_isValid;
}

QString OAIProduct::getBarcode() const {
    return m_barcode;
}
void OAIProduct::setBarcode(const QString &barcode) {
    m_barcode = barcode;
    m_barcode_isSet = true;
}

bool OAIProduct::is_barcode_Set() const{
    return m_barcode_isSet;
}

bool OAIProduct::is_barcode_Valid() const{
    return m_barcode_isValid;
}

qint32 OAIProduct::getMinStockLevel() const {
    return m_min_stock_level;
}
void OAIProduct::setMinStockLevel(const qint32 &min_stock_level) {
    m_min_stock_level = min_stock_level;
    m_min_stock_level_isSet = true;
}

bool OAIProduct::is_min_stock_level_Set() const{
    return m_min_stock_level_isSet;
}

bool OAIProduct::is_min_stock_level_Valid() const{
    return m_min_stock_level_isValid;
}

qint32 OAIProduct::getMaxStockLevel() const {
    return m_max_stock_level;
}
void OAIProduct::setMaxStockLevel(const qint32 &max_stock_level) {
    m_max_stock_level = max_stock_level;
    m_max_stock_level_isSet = true;
}

bool OAIProduct::is_max_stock_level_Set() const{
    return m_max_stock_level_isSet;
}

bool OAIProduct::is_max_stock_level_Valid() const{
    return m_max_stock_level_isValid;
}

qint32 OAIProduct::getDeliveryTime() const {
    return m_delivery_time;
}
void OAIProduct::setDeliveryTime(const qint32 &delivery_time) {
    m_delivery_time = delivery_time;
    m_delivery_time_isSet = true;
}

bool OAIProduct::is_delivery_time_Set() const{
    return m_delivery_time_isSet;
}

bool OAIProduct::is_delivery_time_Valid() const{
    return m_delivery_time_isValid;
}

double OAIProduct::getPurchasePrice() const {
    return m_purchase_price;
}
void OAIProduct::setPurchasePrice(const double &purchase_price) {
    m_purchase_price = purchase_price;
    m_purchase_price_isSet = true;
}

bool OAIProduct::is_purchase_price_Set() const{
    return m_purchase_price_isSet;
}

bool OAIProduct::is_purchase_price_Valid() const{
    return m_purchase_price_isValid;
}

double OAIProduct::getSellingPrice() const {
    return m_selling_price;
}
void OAIProduct::setSellingPrice(const double &selling_price) {
    m_selling_price = selling_price;
    m_selling_price_isSet = true;
}

bool OAIProduct::is_selling_price_Set() const{
    return m_selling_price_isSet;
}

bool OAIProduct::is_selling_price_Valid() const{
    return m_selling_price_isValid;
}

bool OAIProduct::isIsActive() const {
    return m_is_active;
}
void OAIProduct::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAIProduct::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAIProduct::is_is_active_Valid() const{
    return m_is_active_isValid;
}

QDateTime OAIProduct::getCreatedAt() const {
    return m_created_at;
}
void OAIProduct::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIProduct::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIProduct::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QDateTime OAIProduct::getUpdatedAt() const {
    return m_updated_at;
}
void OAIProduct::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIProduct::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIProduct::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

qint64 OAIProduct::getCategoryId() const {
    return m_category_id;
}
void OAIProduct::setCategoryId(const qint64 &category_id) {
    m_category_id = category_id;
    m_category_id_isSet = true;
}

bool OAIProduct::is_category_id_Set() const{
    return m_category_id_isSet;
}

bool OAIProduct::is_category_id_Valid() const{
    return m_category_id_isValid;
}

bool OAIProduct::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_barcode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_stock_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_stock_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_selling_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProduct::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_product_id_isValid && m_sku_isValid && m_name_isValid && m_unit_isValid && m_purchase_price_isValid && m_selling_price_isValid && m_is_active_isValid && m_created_at_isValid && m_updated_at_isValid && true;
}

} // namespace OpenAPI
