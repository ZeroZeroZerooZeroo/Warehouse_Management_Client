/**
 * Warehouse Management API
 * API for managing all operations available in the application
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomerCreate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomerCreate::OAICustomerCreate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomerCreate::OAICustomerCreate() {
    this->initializeModel();
}

OAICustomerCreate::~OAICustomerCreate() {}

void OAICustomerCreate::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_address_isSet = false;
    m_address_isValid = false;

    m_inn_isSet = false;
    m_inn_isValid = false;

    m_discount_rate_isSet = false;
    m_discount_rate_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAICustomerCreate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomerCreate::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_inn_isValid = ::OpenAPI::fromJsonValue(m_inn, json[QString("inn")]);
    m_inn_isSet = !json[QString("inn")].isNull() && m_inn_isValid;

    m_discount_rate_isValid = ::OpenAPI::fromJsonValue(m_discount_rate, json[QString("discount_rate")]);
    m_discount_rate_isSet = !json[QString("discount_rate")].isNull() && m_discount_rate_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAICustomerCreate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomerCreate::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_inn_isSet) {
        obj.insert(QString("inn"), ::OpenAPI::toJsonValue(m_inn));
    }
    if (m_discount_rate_isSet) {
        obj.insert(QString("discount_rate"), ::OpenAPI::toJsonValue(m_discount_rate));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAICustomerCreate::getName() const {
    return m_name;
}
void OAICustomerCreate::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICustomerCreate::is_name_Set() const{
    return m_name_isSet;
}

bool OAICustomerCreate::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICustomerCreate::getPhone() const {
    return m_phone;
}
void OAICustomerCreate::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAICustomerCreate::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAICustomerCreate::is_phone_Valid() const{
    return m_phone_isValid;
}

QString OAICustomerCreate::getEmail() const {
    return m_email;
}
void OAICustomerCreate::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAICustomerCreate::is_email_Set() const{
    return m_email_isSet;
}

bool OAICustomerCreate::is_email_Valid() const{
    return m_email_isValid;
}

QString OAICustomerCreate::getAddress() const {
    return m_address;
}
void OAICustomerCreate::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAICustomerCreate::is_address_Set() const{
    return m_address_isSet;
}

bool OAICustomerCreate::is_address_Valid() const{
    return m_address_isValid;
}

QString OAICustomerCreate::getInn() const {
    return m_inn;
}
void OAICustomerCreate::setInn(const QString &inn) {
    m_inn = inn;
    m_inn_isSet = true;
}

bool OAICustomerCreate::is_inn_Set() const{
    return m_inn_isSet;
}

bool OAICustomerCreate::is_inn_Valid() const{
    return m_inn_isValid;
}

double OAICustomerCreate::getDiscountRate() const {
    return m_discount_rate;
}
void OAICustomerCreate::setDiscountRate(const double &discount_rate) {
    m_discount_rate = discount_rate;
    m_discount_rate_isSet = true;
}

bool OAICustomerCreate::is_discount_rate_Set() const{
    return m_discount_rate_isSet;
}

bool OAICustomerCreate::is_discount_rate_Valid() const{
    return m_discount_rate_isValid;
}

bool OAICustomerCreate::isStatus() const {
    return m_status;
}
void OAICustomerCreate::setStatus(const bool &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICustomerCreate::is_status_Set() const{
    return m_status_isSet;
}

bool OAICustomerCreate::is_status_Valid() const{
    return m_status_isValid;
}

bool OAICustomerCreate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomerCreate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_phone_isValid && m_email_isValid && m_address_isValid && m_inn_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
