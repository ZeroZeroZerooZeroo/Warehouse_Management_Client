/**
 * Warehouse Management API
 * API for managing all operations available in the application
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProductCreate.h
 *
 * 
 */

#ifndef OAIProductCreate_H
#define OAIProductCreate_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProductCreate : public OAIObject {
public:
    OAIProductCreate();
    OAIProductCreate(QString json);
    ~OAIProductCreate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSku() const;
    void setSku(const QString &sku);
    bool is_sku_Set() const;
    bool is_sku_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    QString getBarcode() const;
    void setBarcode(const QString &barcode);
    bool is_barcode_Set() const;
    bool is_barcode_Valid() const;

    qint32 getMinStockLevel() const;
    void setMinStockLevel(const qint32 &min_stock_level);
    bool is_min_stock_level_Set() const;
    bool is_min_stock_level_Valid() const;

    qint32 getMaxStockLevel() const;
    void setMaxStockLevel(const qint32 &max_stock_level);
    bool is_max_stock_level_Set() const;
    bool is_max_stock_level_Valid() const;

    qint32 getDeliveryTime() const;
    void setDeliveryTime(const qint32 &delivery_time);
    bool is_delivery_time_Set() const;
    bool is_delivery_time_Valid() const;

    float getPurchasePrice() const;
    void setPurchasePrice(const float &purchase_price);
    bool is_purchase_price_Set() const;
    bool is_purchase_price_Valid() const;

    float getSellingPrice() const;
    void setSellingPrice(const float &selling_price);
    bool is_selling_price_Set() const;
    bool is_selling_price_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    qint32 getCategoryId() const;
    void setCategoryId(const qint32 &category_id);
    bool is_category_id_Set() const;
    bool is_category_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_sku;
    bool m_sku_isSet;
    bool m_sku_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;

    QString m_barcode;
    bool m_barcode_isSet;
    bool m_barcode_isValid;

    qint32 m_min_stock_level;
    bool m_min_stock_level_isSet;
    bool m_min_stock_level_isValid;

    qint32 m_max_stock_level;
    bool m_max_stock_level_isSet;
    bool m_max_stock_level_isValid;

    qint32 m_delivery_time;
    bool m_delivery_time_isSet;
    bool m_delivery_time_isValid;

    float m_purchase_price;
    bool m_purchase_price_isSet;
    bool m_purchase_price_isValid;

    float m_selling_price;
    bool m_selling_price_isSet;
    bool m_selling_price_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    qint32 m_category_id;
    bool m_category_id_isSet;
    bool m_category_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProductCreate)

#endif // OAIProductCreate_H
