/**
 * Warehouse Management API
 * API for managing all operations available in the application
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductCategory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductCategory::OAIProductCategory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductCategory::OAIProductCategory() {
    this->initializeModel();
}

OAIProductCategory::~OAIProductCategory() {}

void OAIProductCategory::initializeModel() {

    m_category_id_isSet = false;
    m_category_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;
}

void OAIProductCategory::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductCategory::fromJsonObject(QJsonObject json) {

    m_category_id_isValid = ::OpenAPI::fromJsonValue(m_category_id, json[QString("category_id")]);
    m_category_id_isSet = !json[QString("category_id")].isNull() && m_category_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;
}

QString OAIProductCategory::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductCategory::asJsonObject() const {
    QJsonObject obj;
    if (m_category_id_isSet) {
        obj.insert(QString("category_id"), ::OpenAPI::toJsonValue(m_category_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    return obj;
}

qint64 OAIProductCategory::getCategoryId() const {
    return m_category_id;
}
void OAIProductCategory::setCategoryId(const qint64 &category_id) {
    m_category_id = category_id;
    m_category_id_isSet = true;
}

bool OAIProductCategory::is_category_id_Set() const{
    return m_category_id_isSet;
}

bool OAIProductCategory::is_category_id_Valid() const{
    return m_category_id_isValid;
}

QString OAIProductCategory::getName() const {
    return m_name;
}
void OAIProductCategory::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProductCategory::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProductCategory::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIProductCategory::getDescription() const {
    return m_description;
}
void OAIProductCategory::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIProductCategory::is_description_Set() const{
    return m_description_isSet;
}

bool OAIProductCategory::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIProductCategory::getCreatedAt() const {
    return m_created_at;
}
void OAIProductCategory::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIProductCategory::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIProductCategory::is_created_at_Valid() const{
    return m_created_at_isValid;
}

bool OAIProductCategory::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductCategory::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_category_id_isValid && m_name_isValid && m_created_at_isValid && true;
}

} // namespace OpenAPI
