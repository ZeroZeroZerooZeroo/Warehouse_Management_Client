/**
 * Warehouse Management API
 * API for managing all operations available in the application
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISupplier.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISupplier::OAISupplier(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISupplier::OAISupplier() {
    this->initializeModel();
}

OAISupplier::~OAISupplier() {}

void OAISupplier::initializeModel() {

    m_supplier_id_isSet = false;
    m_supplier_id_isValid = false;

    m_name_company_isSet = false;
    m_name_company_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_address_isSet = false;
    m_address_isValid = false;

    m_inn_isSet = false;
    m_inn_isValid = false;

    m_kpp_isSet = false;
    m_kpp_isValid = false;

    m_bank_details_isSet = false;
    m_bank_details_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;

    m_last_purchase_date_isSet = false;
    m_last_purchase_date_isValid = false;
}

void OAISupplier::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISupplier::fromJsonObject(QJsonObject json) {

    m_supplier_id_isValid = ::OpenAPI::fromJsonValue(m_supplier_id, json[QString("supplier_id")]);
    m_supplier_id_isSet = !json[QString("supplier_id")].isNull() && m_supplier_id_isValid;

    m_name_company_isValid = ::OpenAPI::fromJsonValue(m_name_company, json[QString("name_company")]);
    m_name_company_isSet = !json[QString("name_company")].isNull() && m_name_company_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_inn_isValid = ::OpenAPI::fromJsonValue(m_inn, json[QString("inn")]);
    m_inn_isSet = !json[QString("inn")].isNull() && m_inn_isValid;

    m_kpp_isValid = ::OpenAPI::fromJsonValue(m_kpp, json[QString("kpp")]);
    m_kpp_isSet = !json[QString("kpp")].isNull() && m_kpp_isValid;

    m_bank_details_isValid = ::OpenAPI::fromJsonValue(m_bank_details, json[QString("bank_details")]);
    m_bank_details_isSet = !json[QString("bank_details")].isNull() && m_bank_details_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;

    m_last_purchase_date_isValid = ::OpenAPI::fromJsonValue(m_last_purchase_date, json[QString("last_purchase_date")]);
    m_last_purchase_date_isSet = !json[QString("last_purchase_date")].isNull() && m_last_purchase_date_isValid;
}

QString OAISupplier::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISupplier::asJsonObject() const {
    QJsonObject obj;
    if (m_supplier_id_isSet) {
        obj.insert(QString("supplier_id"), ::OpenAPI::toJsonValue(m_supplier_id));
    }
    if (m_name_company_isSet) {
        obj.insert(QString("name_company"), ::OpenAPI::toJsonValue(m_name_company));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_inn_isSet) {
        obj.insert(QString("inn"), ::OpenAPI::toJsonValue(m_inn));
    }
    if (m_kpp_isSet) {
        obj.insert(QString("kpp"), ::OpenAPI::toJsonValue(m_kpp));
    }
    if (m_bank_details_isSet) {
        obj.insert(QString("bank_details"), ::OpenAPI::toJsonValue(m_bank_details));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    if (m_last_purchase_date_isSet) {
        obj.insert(QString("last_purchase_date"), ::OpenAPI::toJsonValue(m_last_purchase_date));
    }
    return obj;
}

qint64 OAISupplier::getSupplierId() const {
    return m_supplier_id;
}
void OAISupplier::setSupplierId(const qint64 &supplier_id) {
    m_supplier_id = supplier_id;
    m_supplier_id_isSet = true;
}

bool OAISupplier::is_supplier_id_Set() const{
    return m_supplier_id_isSet;
}

bool OAISupplier::is_supplier_id_Valid() const{
    return m_supplier_id_isValid;
}

QString OAISupplier::getNameCompany() const {
    return m_name_company;
}
void OAISupplier::setNameCompany(const QString &name_company) {
    m_name_company = name_company;
    m_name_company_isSet = true;
}

bool OAISupplier::is_name_company_Set() const{
    return m_name_company_isSet;
}

bool OAISupplier::is_name_company_Valid() const{
    return m_name_company_isValid;
}

QString OAISupplier::getName() const {
    return m_name;
}
void OAISupplier::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISupplier::is_name_Set() const{
    return m_name_isSet;
}

bool OAISupplier::is_name_Valid() const{
    return m_name_isValid;
}

QString OAISupplier::getPhone() const {
    return m_phone;
}
void OAISupplier::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAISupplier::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAISupplier::is_phone_Valid() const{
    return m_phone_isValid;
}

QString OAISupplier::getEmail() const {
    return m_email;
}
void OAISupplier::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAISupplier::is_email_Set() const{
    return m_email_isSet;
}

bool OAISupplier::is_email_Valid() const{
    return m_email_isValid;
}

QString OAISupplier::getAddress() const {
    return m_address;
}
void OAISupplier::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAISupplier::is_address_Set() const{
    return m_address_isSet;
}

bool OAISupplier::is_address_Valid() const{
    return m_address_isValid;
}

QString OAISupplier::getInn() const {
    return m_inn;
}
void OAISupplier::setInn(const QString &inn) {
    m_inn = inn;
    m_inn_isSet = true;
}

bool OAISupplier::is_inn_Set() const{
    return m_inn_isSet;
}

bool OAISupplier::is_inn_Valid() const{
    return m_inn_isValid;
}

QString OAISupplier::getKpp() const {
    return m_kpp;
}
void OAISupplier::setKpp(const QString &kpp) {
    m_kpp = kpp;
    m_kpp_isSet = true;
}

bool OAISupplier::is_kpp_Set() const{
    return m_kpp_isSet;
}

bool OAISupplier::is_kpp_Valid() const{
    return m_kpp_isValid;
}

QString OAISupplier::getBankDetails() const {
    return m_bank_details;
}
void OAISupplier::setBankDetails(const QString &bank_details) {
    m_bank_details = bank_details;
    m_bank_details_isSet = true;
}

bool OAISupplier::is_bank_details_Set() const{
    return m_bank_details_isSet;
}

bool OAISupplier::is_bank_details_Valid() const{
    return m_bank_details_isValid;
}

QDateTime OAISupplier::getUpdatedAt() const {
    return m_updated_at;
}
void OAISupplier::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAISupplier::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAISupplier::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

QDateTime OAISupplier::getLastPurchaseDate() const {
    return m_last_purchase_date;
}
void OAISupplier::setLastPurchaseDate(const QDateTime &last_purchase_date) {
    m_last_purchase_date = last_purchase_date;
    m_last_purchase_date_isSet = true;
}

bool OAISupplier::is_last_purchase_date_Set() const{
    return m_last_purchase_date_isSet;
}

bool OAISupplier::is_last_purchase_date_Valid() const{
    return m_last_purchase_date_isValid;
}

bool OAISupplier::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_supplier_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kpp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_details_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_purchase_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISupplier::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_supplier_id_isValid && m_name_company_isValid && m_name_isValid && m_phone_isValid && m_email_isValid && m_address_isValid && m_inn_isValid && m_kpp_isValid && m_bank_details_isValid && m_updated_at_isValid && m_last_purchase_date_isValid && true;
}

} // namespace OpenAPI
