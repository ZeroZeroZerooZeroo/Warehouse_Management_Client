/**
 * Warehouse Management API
 * API for managing all operations available in the application
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocumentItemCreate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocumentItemCreate::OAIDocumentItemCreate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocumentItemCreate::OAIDocumentItemCreate() {
    this->initializeModel();
}

OAIDocumentItemCreate::~OAIDocumentItemCreate() {}

void OAIDocumentItemCreate::initializeModel() {

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_tax_rate_isSet = false;
    m_tax_rate_isValid = false;

    m_discount_isSet = false;
    m_discount_isValid = false;
}

void OAIDocumentItemCreate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocumentItemCreate::fromJsonObject(QJsonObject json) {

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_tax_rate_isValid = ::OpenAPI::fromJsonValue(m_tax_rate, json[QString("tax_rate")]);
    m_tax_rate_isSet = !json[QString("tax_rate")].isNull() && m_tax_rate_isValid;

    m_discount_isValid = ::OpenAPI::fromJsonValue(m_discount, json[QString("discount")]);
    m_discount_isSet = !json[QString("discount")].isNull() && m_discount_isValid;
}

QString OAIDocumentItemCreate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocumentItemCreate::asJsonObject() const {
    QJsonObject obj;
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_tax_rate_isSet) {
        obj.insert(QString("tax_rate"), ::OpenAPI::toJsonValue(m_tax_rate));
    }
    if (m_discount_isSet) {
        obj.insert(QString("discount"), ::OpenAPI::toJsonValue(m_discount));
    }
    return obj;
}

double OAIDocumentItemCreate::getQuantity() const {
    return m_quantity;
}
void OAIDocumentItemCreate::setQuantity(const double &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIDocumentItemCreate::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIDocumentItemCreate::is_quantity_Valid() const{
    return m_quantity_isValid;
}

double OAIDocumentItemCreate::getPrice() const {
    return m_price;
}
void OAIDocumentItemCreate::setPrice(const double &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIDocumentItemCreate::is_price_Set() const{
    return m_price_isSet;
}

bool OAIDocumentItemCreate::is_price_Valid() const{
    return m_price_isValid;
}

double OAIDocumentItemCreate::getAmount() const {
    return m_amount;
}
void OAIDocumentItemCreate::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIDocumentItemCreate::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIDocumentItemCreate::is_amount_Valid() const{
    return m_amount_isValid;
}

double OAIDocumentItemCreate::getTaxRate() const {
    return m_tax_rate;
}
void OAIDocumentItemCreate::setTaxRate(const double &tax_rate) {
    m_tax_rate = tax_rate;
    m_tax_rate_isSet = true;
}

bool OAIDocumentItemCreate::is_tax_rate_Set() const{
    return m_tax_rate_isSet;
}

bool OAIDocumentItemCreate::is_tax_rate_Valid() const{
    return m_tax_rate_isValid;
}

double OAIDocumentItemCreate::getDiscount() const {
    return m_discount;
}
void OAIDocumentItemCreate::setDiscount(const double &discount) {
    m_discount = discount;
    m_discount_isSet = true;
}

bool OAIDocumentItemCreate::is_discount_Set() const{
    return m_discount_isSet;
}

bool OAIDocumentItemCreate::is_discount_Valid() const{
    return m_discount_isValid;
}

bool OAIDocumentItemCreate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocumentItemCreate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_quantity_isValid && m_price_isValid && m_amount_isValid && true;
}

} // namespace OpenAPI
